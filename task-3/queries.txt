Aggregate functions calculate a single result from multiple rows
-> they are used for summarizing datas

COUNT()	-> Counts number of rows -> COUNT(*) counts all rows
SUM() -> Adds up numeric column -> SUM(Salary)
AVG() -> Calculates average -> AVG(Salary)
MIN() -> Finds smallest value -> MIN(Salary)
MAX() -> Finds largest value	-> MAX(Salary)

SELECT COUNT(*) FROM Employee;
+----------+
| COUNT(*) |
+----------+
|        5 |
+----------+
1 row in set (0.01 sec)

SELECT SUM(Salary) FROM Employee;
+-------------+
| SUM(Salary) |
+-------------+
|      300000 |
+-------------+
1 row in set (0.00 sec)

SELECT AVG(Salary) FROM Employee;
+-------------+
| AVG(Salary) |
+-------------+
|  60000.0000 |
+-------------+
1 row in set (0.00 sec)

GROUP BY -> Group rows and then apply aggregate functions
Without GROUP BY -> Aggregate entire table
With GROUP BY -> Aggregate each group separately

SELECT Department, COUNT(*) AS TotalEmployee FROM Employee GROUP BY Department;
+------------+---------------+
| Department | TotalEmployee |
+------------+---------------+
| Sales      |             3 |
| HR         |             1 |
| IT         |             1 |
+------------+---------------+
3 rows in set (0.00 sec)

HAVING -> Filter Grouped Data (after aggregation)
WHERE filters rows before grouping
HAVING filters groups after grouping

SELECT Department, COUNT(*) AS TotalEmployee FROM Employee GROUP BY Department HAVING COUNT(*) > 2;
+------------+---------------+
| Department | TotalEmployee |
+------------+---------------+
| Sales      |             3 |
+------------+---------------+
1 row in set (0.00 sec)

Query flow

SELECT -> FROM -> WHERE -> GROUP BY -> HAVING -> ORDER BY

1. FROM     -> Get data from table
2. WHERE    -> Filter rows before grouping
3. GROUP BY -> Group filtered rows
4. HAVING   -> Filter groups after aggregation
5. ORDER BY -> Sort final output

SELECT Department, SUM(Salary) AS TotalSalary
FROM Employee                -- FROM (Table)
WHERE Salary > 50000         -- WHERE (Filter rows first)
GROUP BY Department          -- GROUP BY (Group rows by Department)
HAVING SUM(Salary) > 100000  -- HAVING (Filter groups)
ORDER BY TotalSalary DESC;   -- ORDER BY (Sort output)

+------------+-------------+
| Department | TotalSalary |
+------------+-------------+
| Sales      |      195000 |
| IT         |       55000 |
+------------+-------------+
2 rows in set (0.00 sec)